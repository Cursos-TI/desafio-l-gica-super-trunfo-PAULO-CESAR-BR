/***************************************************************
 * Desenvolvido por: Paulo Cesar
 * Instituição: Estácio
 * Desafio: Comparando Cartas do Super Trunfo - Nível Novato
 ***************************************************************/

#include <stdio.h>

// Definição da estrutura que representa uma carta do Super Trunfo
struct Carta {
    char estado[3];               // Sigla do estado (ex: SP, RJ)
    char codigo[10];              // Código identificador da carta
    char nomeCidade[50];          // Nome da cidade
    int populacao;               // População da cidade
    float area;                  // Área da cidade em km²
    float pib;                   // PIB da cidade em bilhões
    int pontosTuristicos;        // Número de pontos turísticos
    float densidadePopulacional; // População / Área
    float pibPerCapita;          // PIB / População
};

// Função para calcular a densidade populacional (habitantes por km²)
float calcularDensidadePopulacional(int populacao, float area) {
    return populacao / area;
}

// Função para calcular o PIB per capita (PIB dividido pela população)
float calcularPibPerCapita(float pib, int populacao) {
    return pib / populacao;
}

// Função para exibir os dados de uma carta
void exibirCarta(struct Carta carta) {
    printf("Cidade: %s (%s)\n", carta.nomeCidade, carta.estado);
    printf("População: %d\n", carta.populacao);
    printf("Área: %.2f km²\n", carta.area);
    printf("PIB: %.2f bilhões\n", carta.pib);
    printf("Pontos Turísticos: %d\n", carta.pontosTuristicos);
    printf("Densidade Populacional: %.2f hab/km²\n", carta.densidadePopulacional);
    printf("PIB per capita: %.2f\n\n", carta.pibPerCapita);
}

// Função principal do programa
int main() {
    // Cadastro manual dos dados da primeira carta (São Paulo)
    struct Carta carta1 = {
        "SP", "C001", "São Paulo",
        12300000,     // População
        1521.11,      // Área em km²
        799.0,        // PIB em bilhões
        15,           // Pontos turísticos
        0.0,          // Densidade (será calculada)
        0.0           // PIB per capita (será calculado)
    };

    // Cadastro manual dos dados da segunda carta (Rio de Janeiro)
    struct Carta carta2 = {
        "RJ", "C002", "Rio de Janeiro",
        6718903,      // População
        1182.30,      // Área em km²
        413.0,        // PIB em bilhões
        12,           // Pontos turísticos
        0.0,          // Densidade (será calculada)
        0.0           // PIB per capita (será calculado)
    };

    // Cálculo da densidade populacional e PIB per capita para carta 1
    carta1.densidadePopulacional = calcularDensidadePopulacional(carta1.populacao, carta1.area);
    carta1.pibPerCapita = calcularPibPerCapita(carta1.pib, carta1.populacao);

    // Cálculo da densidade populacional e PIB per capita para carta 2
    carta2.densidadePopulacional = calcularDensidadePopulacional(carta2.populacao, carta2.area);
    carta2.pibPerCapita = calcularPibPerCapita(carta2.pib, carta2.populacao);

    // Exibição dos dados da primeira carta
    printf("=== Carta 1 ===\n");
    exibirCarta(carta1);

    // Exibição dos dados da segunda carta
    printf("=== Carta 2 ===\n");
    exibirCarta(carta2);

    // ================================================
    // Comparação com base em um único atributo: População
    // ================================================
    printf("Comparação de cartas (Atributo: População):\n\n");
    printf("Carta 1 - %s (%s): %d habitantes\n", carta1.nomeCidade, carta1.estado, carta1.populacao);
    printf("Carta 2 - %s (%s): %d habitantes\n\n", carta2.nomeCidade, carta2.estado, carta2.populacao);

    // Lógica de decisão para determinar qual carta vence com base na população
    if (carta1.populacao > carta2.populacao) {
        printf("Resultado: Carta 1 (%s) venceu!\n", carta1.nomeCidade);
    } else if (carta2.populacao > carta1.populacao) {
        printf("Resultado: Carta 2 (%s) venceu!\n", carta2.nomeCidade);
    } else {
        printf("Resultado: Empate!\n");
    }

    return 0;
}

/***************************************************************
 * Desenvolvido por: Paulo Cesar
 * Instituição: Estácio
 ***************************************************************/
